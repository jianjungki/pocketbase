# simple docker-compose.yml file for redis, postgres and minio and elastic
version: '3'

services:
  # postgresql service
  postgresqlapp:
    image: postgres:15.2-alpine
    networks:
      - bbfnnet
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=logs
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: always
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 10s
      timeout: 2s
      retries: 10
  # minio
  minioapp:
    image: minio/minio:RELEASE.2023-01-31T02-24-19Z
    networks:
      - bbfnnet
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio123
      - MINIO_ROOT_PASSWORD=minio123
    restart: always
    volumes:
      - ./volumes/minio:/data
    command: server /data --console-address ":9001"
  # mailhog/mailhog
  mailhogapp:
    image: mailhog/mailhog
    networks:
      - bbfnnet
    ports:
      - "8025:8025"
      - "1025:1025"
    restart: always

networks:
  bbfnnet:
    name: bbfnnet
    driver: bridge

# # zookeeper
#   zookeeperapp: 
#     image: 'wurstmeister/zookeeper:latest' 
#     ports: 
#       - '2181:2181' 
#     environment: 
#       - ALLOW_ANONYMOUS_LOGIN=yes
#     volumes: 
#       - ./volumes/zookeeper:/var/lib/zookeeper/data
#   # kafka
#   kafkaapp: 
#     image: 'wurstmeister/kafka:latest' 
#     ports: 
#       - '9092:9092' 
#     environment: 
#       - KAFKA_BROKER_ID=1 
#       - KAFKA_LISTENERS=PLAINTEXT://:9092 
#       - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092 
#       - KAFKA_ZOOKEEPER_CONNECT=zookeeperapp:2181 
#       - ALLOW_PLAINTEXT_LISTENER=yes
#       # auto create topic set true
#       - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
#     volumes:
#       - ./volumes/kafka:/var/lib/kafka/data
#     depends_on: 
#       - zookeeperapp
